//
//  SearchWorker.swift
//  Reciplease
//
//  Created by Thibault Bargat on 21/03/2019.
//  Copyright (c) 2019 Thibault Bargat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

typealias responseHandler = (_ response: Search.Fetch.Response) ->()

class SearchWorker
{
    func requestFetchRecipes(ingredients: [String], completion: @escaping responseHandler) {
        Alamofire.request(formatApiURLWithIngredients(ingredients: ingredients)).responseWelcome { response in
            if let recipleaseObject = response.result.value {
                completion(Search.Fetch.Response(recipesArrayObj: recipleaseObject.recipes, ingredients: nil, isError: false, message: nil))
            } else {
                completion(Search.Fetch.Response(recipesArrayObj: nil, ingredients: nil, isError: true, message: "Alamofire: erreur de chargement"))
            }
        }
    }
    
    private func formatApiURLWithIngredients(ingredients: [String]) -> String {
        var apiURLFormatted = Constants.apiURL
        for ingredient in ingredients {
            apiURLFormatted += "&allowedIngredient[]=\(ingredient)"
        }
        return apiURLFormatted
    }
}
